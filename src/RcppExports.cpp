// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// irc_notify
void irc_notify(std::string irc_server, std::string channel, CharacterVector message, int port, bool ssl, std::string server_password, std::string nickname, std::string username, std::string realname);
RcppExport SEXP irced_irc_notify(SEXP irc_serverSEXP, SEXP channelSEXP, SEXP messageSEXP, SEXP portSEXP, SEXP sslSEXP, SEXP server_passwordSEXP, SEXP nicknameSEXP, SEXP usernameSEXP, SEXP realnameSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type irc_server(irc_serverSEXP);
    Rcpp::traits::input_parameter< std::string >::type channel(channelSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type message(messageSEXP);
    Rcpp::traits::input_parameter< int >::type port(portSEXP);
    Rcpp::traits::input_parameter< bool >::type ssl(sslSEXP);
    Rcpp::traits::input_parameter< std::string >::type server_password(server_passwordSEXP);
    Rcpp::traits::input_parameter< std::string >::type nickname(nicknameSEXP);
    Rcpp::traits::input_parameter< std::string >::type username(usernameSEXP);
    Rcpp::traits::input_parameter< std::string >::type realname(realnameSEXP);
    irc_notify(irc_server, channel, message, port, ssl, server_password, nickname, username, realname);
    return R_NilValue;
END_RCPP
}
